#!/usr/bin/env python3
"""
Script ki·ªÉm tra linh ho·∫°t c√°c k·ªãch b·∫£n g·ª≠i email.
Ch·ªâ c·∫ßn b·ªè comment k·ªãch b·∫£n b·∫°n mu·ªën ch·∫°y.
"""

import paho.mqtt.client as mqtt
import json
import time
from datetime import datetime

# ==================== CONFIG ====================
BROKER = "localhost"
PORT = 1883

# ==================== CH·ªåN K·ªäCH B·∫¢N TEST ====================
# B·ªè comment (x√≥a d·∫•u #) ·ªü k·ªãch b·∫£n b·∫°n mu·ªën ch·∫°y
# v√† comment l·∫°i c√°c k·ªãch b·∫£n kh√°c.

# --- K·ªãch b·∫£n 1: Test Email theo Quy t·∫Øc (ƒê·∫•t kh√¥) ---
# SCENARIO = {
#     "name": "K·ªãch b·∫£n 1: Test Email theo Quy t·∫Øc T·ª± ƒë·ªông",
#     "device_id": "SOIL-TEST-01",
#     "payload": {
#         "deviceId": "SOIL-TEST-01",
#         "sensorType": "SOIL_MOISTURE",
#         "soilMoisture": 19.5,  # < 25 -> K√≠ch ho·∫°t rule
#         "temperature": 28.0
#     }
# }

# --- K·ªãch b·∫£n 2: Test Email C·∫£nh b√°o S·ª©c kh·ªèe C√¢y (Nguy c∆° n·∫•m) ---
# SCENARIO = {
#     "name": "K·ªãch b·∫£n 2: Test Email C·∫£nh b√°o S·ª©c kh·ªèe C√¢y",
#     "device_id": "DHT-PLANT-TEST",
#     "payload": {
#         "deviceId": "DHT-PLANT-TEST",
#         "sensorType": "DHT22",
#         "temperature": 26.5,
#         "humidity": 92.8 # > 85 -> K√≠ch ho·∫°t c·∫£nh b√°o
#     }
# }

# --- K·ªãch b·∫£n 4: Test Email C·∫£nh b√°o T·ª©c th·ªùi (Nhi·ªát ƒë·ªô cao) ---
SCENARIO = {
    "name": "K·ªãch b·∫£n 4: Test Email C·∫£nh b√°o T·ª©c th·ªùi t·ª´ C·∫£m bi·∫øn",
    "device_id": "DHT-REALTIME-TEST",
    "payload": {
        "deviceId": "DHT-REALTIME-TEST",
        "sensorType": "DHT22",
        "temperature": 41.0, # > 38 -> K√≠ch ho·∫°t c·∫£nh b√°o
        "humidity": 35.0
    }
}

# ==================== LOGIC G·ª¨I TIN ====================
def run_test(scenario):
    print("\n" + "="*70)
    print(f"üîß ƒêang ch·∫°y: {scenario['name']}")
    print("="*70)

    device_id = scenario['device_id']
    topic = f"sensor/{device_id}/data"
    payload = scenario['payload']
    
    # Th√™m timestamp n·∫øu ch∆∞a c√≥
    if 'timestamp' not in payload:
        payload['timestamp'] = datetime.now().isoformat()

    try:
        client = mqtt.Client(callback_api_version=mqtt.CallbackAPIVersion.VERSION1)
        client.connect(BROKER, PORT, 60)
        print(f"‚úÖ ƒê√£ k·∫øt n·ªëi t·ªõi MQTT Broker: {BROKER}:{PORT}")

        client.loop_start()
        time.sleep(1)
        
        print(f"üì§ ƒêang g·ª≠i d·ªØ li·ªáu t·ªõi topic: {topic}")
        print("   Payload:", json.dumps(payload, indent=2))
        client.publish(topic, json.dumps(payload), qos=1)
        
        time.sleep(1)
        client.loop_stop()
        client.disconnect()
        print("‚úÖ ƒê√£ g·ª≠i tin nh·∫Øn v√† ng·∫Øt k·∫øt n·ªëi.")
        print("--------------------------------------------------")

    except Exception as e:
        print(f"\n‚ùå L·ªñI: {e}")
        print("\nüîß KH·∫ÆC PH·ª§C:")
        print("   1. ƒê·∫£m b·∫£o Docker v√† container 'smartfarm-mosquitto' ƒëang ch·∫°y.")
        print("   2. Ki·ªÉm tra l·∫°i ƒë·ªãa ch·ªâ Broker v√† Port.\n")

if __name__ == '__main__':
    run_test(SCENARIO)